server.port=2221
eureka.instance.hostname=localhost
spring.application.name=hello-service
#指定服务实例的注册中心地址，在构建了高可用的注册中心（通过注册中心的相互注册完成）之后，可以为服务实例指定多个注册中心 通过逗号分隔
eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/,http://localhost:1112/eureka/
#指定服务实例名配置规则 这里设置为主机名+应用名+端口号
eureka.instance.instance-id=${eureka.instance.hostname}:${spring.application.name}:${server.port}
#为应用设置context-path 设置了context-path后一些端点配置比如应用主页的url 状态页的url和健康检查的url的默认配置需要加上context-path的值作为前缀
server.context-path=/hello
eureka.client.healthcheck.enabled=true
management.security.enabled=false
eureka.instance.health-check-url=${server.context-path}/health
eureka.instance.status-page-url=${server.context-path}/info
eureka.instance.home-page-url=${server.context-path}/



#重试机制相关配置
#开启重试机制
spring.cloud.loadbalancer.retry.enabled=true
#断路器的超时时间需要大于ribbon的超时时间否则不会触发重试机制
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
#请求连接的超时时间
hello-consumer.ribbon.ConnectTimeout=250
#请求处理的超时时间
hello-consumer.ribbon.ReadTimeout=1000
#对所有请求操作都进行重试
hello-consumer.ribbon.OkToRetryOnAllOperations=true
#切换实例的重试次数
hello-consumer.ribbon.MaxAutoRetriesNextServer=2
#对当前实例的重试次数
hello-consumer.ribbon.MaxAutoRetries=1

